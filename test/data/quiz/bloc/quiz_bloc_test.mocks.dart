// Mocks generated by Mockito 5.0.16 from annotations
// in quiz_proj/test/data/quiz/bloc/quiz_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quiz_proj/data/quiz/model/quiz_model.dart' as _i3;
import 'package:quiz_proj/data/quiz/repository/quiz_repository.dart' as _i4;
import 'package:quiz_proj/data/quiz/source/quiz_source.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeQuizSource_0 extends _i1.Fake implements _i2.QuizSource {}

class _FakeQuiz_1 extends _i1.Fake implements _i3.Quiz {}

/// A class which mocks [QuizRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuizRepository extends _i1.Mock implements _i4.QuizRepository {
  MockQuizRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QuizSource get quizSource =>
      (super.noSuchMethod(Invocation.getter(#quizSource),
          returnValue: _FakeQuizSource_0()) as _i2.QuizSource);
  @override
  _i5.Future<List<_i3.Quiz>> getQuizQuestionsFromRandomCategory() =>
      (super.noSuchMethod(
              Invocation.method(#getQuizQuestionsFromRandomCategory, []),
              returnValue: Future<List<_i3.Quiz>>.value(<_i3.Quiz>[]))
          as _i5.Future<List<_i3.Quiz>>);
  @override
  _i5.Future<List<_i3.Quiz>> getQuizQuestionsFromGivenCategory(
          String? categoryName) =>
      (super.noSuchMethod(
          Invocation.method(#getQuizQuestionsFromGivenCategory, [categoryName]),
          returnValue:
              Future<List<_i3.Quiz>>.value(<_i3.Quiz>[])) as _i5
          .Future<List<_i3.Quiz>>);
  @override
  _i5.Future<_i3.Quiz> createQuizQuestionWithGivenCategory(_i3.Quiz? quiz) =>
      (super.noSuchMethod(
              Invocation.method(#createQuizQuestionWithGivenCategory, [quiz]),
              returnValue: Future<_i3.Quiz>.value(_FakeQuiz_1()))
          as _i5.Future<_i3.Quiz>);
  @override
  String toString() => super.toString();
}
